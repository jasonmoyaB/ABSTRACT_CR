@model Abstract_CR.Models.ViewModels.PedidoFormViewModel
@using Abstract_CR.Models
@using System.Linq
@{
    ViewData["Title"] = "Nuevo Pedido";
    if (Model.Detalles == null || !Model.Detalles.Any())
    {
        Model.Detalles = new List<Abstract_CR.Models.ViewModels.PedidoDetalleFormViewModel>
        {
            new Abstract_CR.Models.ViewModels.PedidoDetalleFormViewModel()
        };
    }
}

<section class="page-section">
    <div class="container">
        <div class="row">
            <div class="col-xl-9 mx-auto">
                <div class="bg-faded rounded shadow-sm p-4">
                    <div class="text-center mb-4">
                        <h2 class="section-heading mb-0">
                            <span class="section-heading-upper">Gestión de Pedidos</span>
                            <span class="section-heading-lower">Crear Pedido</span>
                        </h2>
                    </div>
                    <form asp-action="Create" method="post" class="text-start">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="row g-3">
                            <div class="col-md-4">
                                <label asp-for="UsuarioId" class="form-label fw-semibold text-uppercase small"></label>
                                <input asp-for="UsuarioId" class="form-control" />
                                <span asp-validation-for="UsuarioId" class="text-danger small"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="MetodoPago" class="form-label fw-semibold text-uppercase small"></label>
                                <select asp-for="MetodoPago" class="form-select" asp-items="Html.GetEnumSelectList<MetodoPago>()"></select>
                                <span asp-validation-for="MetodoPago" class="text-danger small"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="DireccionEnvio" class="form-label fw-semibold text-uppercase small"></label>
                                <input asp-for="DireccionEnvio" class="form-control" />
                                <span asp-validation-for="DireccionEnvio" class="text-danger small"></span>
                            </div>
                        </div>

                        <hr class="my-4" />

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h3 class="h5 text-uppercase text-primary mb-0">Ítems del Pedido</h3>
                            <button type="button" id="agregar-detalle" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-plus"></i> Agregar ítem
                            </button>
                        </div>

                        <div id="detalles-container">
                            @for (var i = 0; i < Model.Detalles.Count; i++)
                            {
                                <div class="detalle-item bg-white border rounded-3 p-3 mb-3" data-detalle-index="@i">
                                    <div class="row g-3 align-items-end">
                                        <div class="col-md-5">
                                            <label asp-for="Detalles[i].Descripcion" class="form-label small text-uppercase fw-semibold"></label>
                                            <input asp-for="Detalles[i].Descripcion" class="form-control" />
                                            <span asp-validation-for="Detalles[i].Descripcion" class="text-danger small"></span>
                                        </div>
                                        <div class="col-md-2">
                                            <label asp-for="Detalles[i].Cantidad" class="form-label small text-uppercase fw-semibold"></label>
                                            <input asp-for="Detalles[i].Cantidad" class="form-control" />
                                            <span asp-validation-for="Detalles[i].Cantidad" class="text-danger small"></span>
                                        </div>
                                        <div class="col-md-3">
                                            <label asp-for="Detalles[i].PrecioUnitario" class="form-label small text-uppercase fw-semibold"></label>
                                            <input asp-for="Detalles[i].PrecioUnitario" class="form-control" />
                                            <span asp-validation-for="Detalles[i].PrecioUnitario" class="text-danger small"></span>
                                        </div>
                                        <div class="col-md-2 text-end">
                                            <button type="button" class="btn btn-outline-danger btn-sm remove-detalle">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="text-end mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary me-2">Cancelar</a>
                            <button type="submit" class="btn btn-primary text-uppercase px-4">Guardar Pedido</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<template id="detalle-template">
    <div class="detalle-item bg-white border rounded-3 p-3 mb-3" data-detalle-index="__index__">
        <div class="row g-3 align-items-end">
            <div class="col-md-5">
                <label class="form-label small text-uppercase fw-semibold" for="Detalles___index__--Descripcion">Descripción del Producto</label>
                <input class="form-control" id="Detalles___index__--Descripcion" name="Detalles[__index__].Descripcion" />
                <span class="text-danger small" data-valmsg-for="Detalles[__index__].Descripcion" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-2">
                <label class="form-label small text-uppercase fw-semibold" for="Detalles___index__--Cantidad">Cantidad</label>
                <input class="form-control" id="Detalles___index__--Cantidad" name="Detalles[__index__].Cantidad" type="number" value="1" min="1" />
                <span class="text-danger small" data-valmsg-for="Detalles[__index__].Cantidad" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-3">
                <label class="form-label small text-uppercase fw-semibold" for="Detalles___index__--PrecioUnitario">Precio Unitario</label>
                <input class="form-control" id="Detalles___index__--PrecioUnitario" name="Detalles[__index__].PrecioUnitario" type="number" step="0.01" min="0" />
                <span class="text-danger small" data-valmsg-for="Detalles[__index__].PrecioUnitario" data-valmsg-replace="true"></span>
            </div>
            <div class="col-md-2 text-end">
                <button type="button" class="btn btn-outline-danger btn-sm remove-detalle">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    </div>
</template>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (() => {
            const container = document.getElementById('detalles-container');
            const template = document.getElementById('detalle-template');
            const addButton = document.getElementById('agregar-detalle');

            const renumberItems = () => {
                const items = container.querySelectorAll('.detalle-item');
                items.forEach((item, index) => {
                    item.dataset.detalleIndex = index;
                    item.querySelectorAll('input').forEach(input => {
                        const name = input.getAttribute('name');
                        const id = input.getAttribute('id');
                        if (name) {
                            input.setAttribute('name', name.replace(/Detalles\[[0-9]+\]/, `Detalles[${index}]`));
                        }
                        if (id) {
                            input.setAttribute('id', id.replace(/Detalles_[0-9]+__/, `Detalles_${index}__`).replace(/Detalles___index__--/, `Detalles_${index}__`));
                        }
                    });
                    item.querySelectorAll('label').forEach(label => {
                        const htmlFor = label.getAttribute('for');
                        if (htmlFor) {
                            label.setAttribute('for', htmlFor.replace(/Detalles_[0-9]+__/, `Detalles_${index}__`).replace(/Detalles___index__--/, `Detalles_${index}__`));
                        }
                    });
                    item.querySelectorAll('[data-valmsg-for]').forEach(span => {
                        const field = span.getAttribute('data-valmsg-for');
                        if (field) {
                            span.setAttribute('data-valmsg-for', field.replace(/Detalles\[[0-9]+\]/, `Detalles[${index}]`));
                        }
                        span.textContent = '';
                    });
                });
            };

            const addItem = () => {
                const newIndex = container.querySelectorAll('.detalle-item').length;
                if (template) {
                    const fragment = template.content.cloneNode(true);
                    fragment.querySelectorAll('input').forEach(input => {
                        input.value = input.getAttribute('type') === 'number' ? (input.getAttribute('value') || '') : '';
                    });
                    container.appendChild(fragment);
                    renumberItems();
                }
            };

            const removeItem = (button) => {
                const item = button.closest('.detalle-item');
                if (!item) {
                    return;
                }
                if (container.querySelectorAll('.detalle-item').length <= 1) {
                    item.querySelectorAll('input').forEach(input => input.value = '');
                    return;
                }
                item.remove();
                renumberItems();
            };

            container?.addEventListener('click', (event) => {
                const target = event.target;
                if (target instanceof HTMLElement) {
                    if (target.classList.contains('remove-detalle') || target.closest('.remove-detalle')) {
                        event.preventDefault();
                        const button = target.classList.contains('remove-detalle') ? target : target.closest('.remove-detalle');
                        removeItem(button);
                    }
                }
            });

            addButton?.addEventListener('click', (event) => {
                event.preventDefault();
                addItem();
            });
        })();
    </script>
}
